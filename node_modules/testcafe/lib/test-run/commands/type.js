"use strict";
// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    dispatchEvent: 'dispatch-event',
    click: 'click',
    rightClick: 'right-click',
    doubleClick: 'double-click',
    drag: 'drag',
    dragToElement: 'drag-to-element',
    hover: 'hover',
    scroll: 'scroll',
    scrollBy: 'scroll-by',
    scrollIntoView: 'scroll-into-view',
    typeText: 'type-text',
    selectText: 'select-text',
    selectTextAreaContent: 'select-text-area-content',
    selectEditableContent: 'select-editable-content',
    pressKey: 'press-key',
    wait: 'wait',
    navigateTo: 'navigate-to',
    setFilesToUpload: 'set-files-to-upload',
    clearUpload: 'clear-upload',
    executeClientFunction: 'execute-client-function',
    executeSelector: 'execute-selector',
    takeScreenshot: 'take-screenshot',
    takeElementScreenshot: 'take-element-screenshot',
    takeScreenshotOnFail: 'take-screenshot-on-fail',
    prepareBrowserManipulation: 'prepare-browser-manipulation',
    showAssertionRetriesStatus: 'show-assertion-retries-status',
    hideAssertionRetriesStatus: 'hide-assertion-retries-status',
    setBreakpoint: 'set-breakpoint',
    resizeWindow: 'resize-window',
    resizeWindowToFitDevice: 'resize-window-to-fit-device',
    maximizeWindow: 'maximize-window',
    switchToIframe: 'switch-to-iframe',
    switchToMainWindow: 'switch-to-main-window',
    openWindow: 'open-window',
    closeWindow: 'close-window',
    getCurrentWindow: 'get-current-window',
    getCurrentWindows: 'get-current-windows',
    switchToWindow: 'switch-to-window',
    switchToWindowByPredicate: 'switch-to-window-by-predicate',
    switchToParentWindow: 'switch-to-parent-window',
    switchToPreviousWindow: 'switch-to-previous-window',
    setNativeDialogHandler: 'set-native-dialog-handler',
    getNativeDialogHistory: 'get-native-dialog-history',
    getBrowserConsoleMessages: 'get-browser-console-messages',
    getActiveElement: 'get-active-element',
    setTestSpeed: 'set-test-speed',
    setPageLoadTimeout: 'set-page-load-timeout',
    debug: 'debug',
    disableDebug: 'disable-debug',
    assertion: 'assertion',
    useRole: 'useRole',
    testDone: 'test-done',
    backupStorages: 'backup-storages',
    executeExpression: 'execute-expression',
    executeAsyncExpression: 'execute-async-expression',
    unlockPage: 'unlock-page',
    closeChildWindowOnFileDownloading: 'close-child-window-on-file-downloading',
    recorder: 'recorder',
    prepareClientEnvironmentInDebugMode: 'prepare-client-environment-in-debug-mode',
};
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXN0LXJ1bi9jb21tYW5kcy90eXBlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxnRUFBZ0U7QUFDaEUsZ0VBQWdFO0FBQ2hFLCtDQUErQztBQUMvQyxnRUFBZ0U7O0FBRWhFLGtCQUFlO0lBQ1gsYUFBYSxFQUF3QixnQkFBZ0I7SUFDckQsS0FBSyxFQUFnQyxPQUFPO0lBQzVDLFVBQVUsRUFBMkIsYUFBYTtJQUNsRCxXQUFXLEVBQTBCLGNBQWM7SUFDbkQsSUFBSSxFQUFpQyxNQUFNO0lBQzNDLGFBQWEsRUFBd0IsaUJBQWlCO0lBQ3RELEtBQUssRUFBZ0MsT0FBTztJQUM1QyxNQUFNLEVBQStCLFFBQVE7SUFDN0MsUUFBUSxFQUE2QixXQUFXO0lBQ2hELGNBQWMsRUFBdUIsa0JBQWtCO0lBQ3ZELFFBQVEsRUFBNkIsV0FBVztJQUNoRCxVQUFVLEVBQTJCLGFBQWE7SUFDbEQscUJBQXFCLEVBQWdCLDBCQUEwQjtJQUMvRCxxQkFBcUIsRUFBZ0IseUJBQXlCO0lBQzlELFFBQVEsRUFBNkIsV0FBVztJQUNoRCxJQUFJLEVBQWlDLE1BQU07SUFDM0MsVUFBVSxFQUEyQixhQUFhO0lBQ2xELGdCQUFnQixFQUFxQixxQkFBcUI7SUFDMUQsV0FBVyxFQUEwQixjQUFjO0lBQ25ELHFCQUFxQixFQUFnQix5QkFBeUI7SUFDOUQsZUFBZSxFQUFzQixrQkFBa0I7SUFDdkQsY0FBYyxFQUF1QixpQkFBaUI7SUFDdEQscUJBQXFCLEVBQWdCLHlCQUF5QjtJQUM5RCxvQkFBb0IsRUFBaUIseUJBQXlCO0lBQzlELDBCQUEwQixFQUFXLDhCQUE4QjtJQUNuRSwwQkFBMEIsRUFBVywrQkFBK0I7SUFDcEUsMEJBQTBCLEVBQVcsK0JBQStCO0lBQ3BFLGFBQWEsRUFBd0IsZ0JBQWdCO0lBQ3JELFlBQVksRUFBeUIsZUFBZTtJQUNwRCx1QkFBdUIsRUFBYyw2QkFBNkI7SUFDbEUsY0FBYyxFQUF1QixpQkFBaUI7SUFDdEQsY0FBYyxFQUF1QixrQkFBa0I7SUFDdkQsa0JBQWtCLEVBQW1CLHVCQUF1QjtJQUM1RCxVQUFVLEVBQTJCLGFBQWE7SUFDbEQsV0FBVyxFQUEwQixjQUFjO0lBQ25ELGdCQUFnQixFQUFxQixvQkFBb0I7SUFDekQsaUJBQWlCLEVBQW9CLHFCQUFxQjtJQUMxRCxjQUFjLEVBQXVCLGtCQUFrQjtJQUN2RCx5QkFBeUIsRUFBWSwrQkFBK0I7SUFDcEUsb0JBQW9CLEVBQWlCLHlCQUF5QjtJQUM5RCxzQkFBc0IsRUFBZSwyQkFBMkI7SUFDaEUsc0JBQXNCLEVBQWUsMkJBQTJCO0lBQ2hFLHNCQUFzQixFQUFlLDJCQUEyQjtJQUNoRSx5QkFBeUIsRUFBWSw4QkFBOEI7SUFDbkUsZ0JBQWdCLEVBQXFCLG9CQUFvQjtJQUN6RCxZQUFZLEVBQXlCLGdCQUFnQjtJQUNyRCxrQkFBa0IsRUFBbUIsdUJBQXVCO0lBQzVELEtBQUssRUFBZ0MsT0FBTztJQUM1QyxZQUFZLEVBQXlCLGVBQWU7SUFDcEQsU0FBUyxFQUE0QixXQUFXO0lBQ2hELE9BQU8sRUFBOEIsU0FBUztJQUM5QyxRQUFRLEVBQTZCLFdBQVc7SUFDaEQsY0FBYyxFQUF1QixpQkFBaUI7SUFDdEQsaUJBQWlCLEVBQW9CLG9CQUFvQjtJQUN6RCxzQkFBc0IsRUFBZSwwQkFBMEI7SUFDL0QsVUFBVSxFQUEyQixhQUFhO0lBQ2xELGlDQUFpQyxFQUFJLHdDQUF3QztJQUM3RSxRQUFRLEVBQTZCLFVBQVU7SUFDL0MsbUNBQW1DLEVBQUUsMENBQTBDO0NBQ2xGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBXQVJOSU5HOiB0aGlzIGZpbGUgaXMgdXNlZCBieSBib3RoIHRoZSBjbGllbnQgYW5kIHRoZSBzZXJ2ZXIuXG4vLyBEbyBub3QgdXNlIGFueSBicm93c2VyIG9yIG5vZGUtc3BlY2lmaWMgQVBJIVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgZGlzcGF0Y2hFdmVudDogICAgICAgICAgICAgICAgICAgICAgICdkaXNwYXRjaC1ldmVudCcsXG4gICAgY2xpY2s6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjbGljaycsXG4gICAgcmlnaHRDbGljazogICAgICAgICAgICAgICAgICAgICAgICAgICdyaWdodC1jbGljaycsXG4gICAgZG91YmxlQ2xpY2s6ICAgICAgICAgICAgICAgICAgICAgICAgICdkb3VibGUtY2xpY2snLFxuICAgIGRyYWc6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZHJhZycsXG4gICAgZHJhZ1RvRWxlbWVudDogICAgICAgICAgICAgICAgICAgICAgICdkcmFnLXRvLWVsZW1lbnQnLFxuICAgIGhvdmVyOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaG92ZXInLFxuICAgIHNjcm9sbDogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc2Nyb2xsJyxcbiAgICBzY3JvbGxCeTogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3Njcm9sbC1ieScsXG4gICAgc2Nyb2xsSW50b1ZpZXc6ICAgICAgICAgICAgICAgICAgICAgICdzY3JvbGwtaW50by12aWV3JyxcbiAgICB0eXBlVGV4dDogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3R5cGUtdGV4dCcsXG4gICAgc2VsZWN0VGV4dDogICAgICAgICAgICAgICAgICAgICAgICAgICdzZWxlY3QtdGV4dCcsXG4gICAgc2VsZWN0VGV4dEFyZWFDb250ZW50OiAgICAgICAgICAgICAgICdzZWxlY3QtdGV4dC1hcmVhLWNvbnRlbnQnLFxuICAgIHNlbGVjdEVkaXRhYmxlQ29udGVudDogICAgICAgICAgICAgICAnc2VsZWN0LWVkaXRhYmxlLWNvbnRlbnQnLFxuICAgIHByZXNzS2V5OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAncHJlc3Mta2V5JyxcbiAgICB3YWl0OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3dhaXQnLFxuICAgIG5hdmlnYXRlVG86ICAgICAgICAgICAgICAgICAgICAgICAgICAnbmF2aWdhdGUtdG8nLFxuICAgIHNldEZpbGVzVG9VcGxvYWQ6ICAgICAgICAgICAgICAgICAgICAnc2V0LWZpbGVzLXRvLXVwbG9hZCcsXG4gICAgY2xlYXJVcGxvYWQ6ICAgICAgICAgICAgICAgICAgICAgICAgICdjbGVhci11cGxvYWQnLFxuICAgIGV4ZWN1dGVDbGllbnRGdW5jdGlvbjogICAgICAgICAgICAgICAnZXhlY3V0ZS1jbGllbnQtZnVuY3Rpb24nLFxuICAgIGV4ZWN1dGVTZWxlY3RvcjogICAgICAgICAgICAgICAgICAgICAnZXhlY3V0ZS1zZWxlY3RvcicsXG4gICAgdGFrZVNjcmVlbnNob3Q6ICAgICAgICAgICAgICAgICAgICAgICd0YWtlLXNjcmVlbnNob3QnLFxuICAgIHRha2VFbGVtZW50U2NyZWVuc2hvdDogICAgICAgICAgICAgICAndGFrZS1lbGVtZW50LXNjcmVlbnNob3QnLFxuICAgIHRha2VTY3JlZW5zaG90T25GYWlsOiAgICAgICAgICAgICAgICAndGFrZS1zY3JlZW5zaG90LW9uLWZhaWwnLFxuICAgIHByZXBhcmVCcm93c2VyTWFuaXB1bGF0aW9uOiAgICAgICAgICAncHJlcGFyZS1icm93c2VyLW1hbmlwdWxhdGlvbicsXG4gICAgc2hvd0Fzc2VydGlvblJldHJpZXNTdGF0dXM6ICAgICAgICAgICdzaG93LWFzc2VydGlvbi1yZXRyaWVzLXN0YXR1cycsXG4gICAgaGlkZUFzc2VydGlvblJldHJpZXNTdGF0dXM6ICAgICAgICAgICdoaWRlLWFzc2VydGlvbi1yZXRyaWVzLXN0YXR1cycsXG4gICAgc2V0QnJlYWtwb2ludDogICAgICAgICAgICAgICAgICAgICAgICdzZXQtYnJlYWtwb2ludCcsXG4gICAgcmVzaXplV2luZG93OiAgICAgICAgICAgICAgICAgICAgICAgICdyZXNpemUtd2luZG93JyxcbiAgICByZXNpemVXaW5kb3dUb0ZpdERldmljZTogICAgICAgICAgICAgJ3Jlc2l6ZS13aW5kb3ctdG8tZml0LWRldmljZScsXG4gICAgbWF4aW1pemVXaW5kb3c6ICAgICAgICAgICAgICAgICAgICAgICdtYXhpbWl6ZS13aW5kb3cnLFxuICAgIHN3aXRjaFRvSWZyYW1lOiAgICAgICAgICAgICAgICAgICAgICAnc3dpdGNoLXRvLWlmcmFtZScsXG4gICAgc3dpdGNoVG9NYWluV2luZG93OiAgICAgICAgICAgICAgICAgICdzd2l0Y2gtdG8tbWFpbi13aW5kb3cnLFxuICAgIG9wZW5XaW5kb3c6ICAgICAgICAgICAgICAgICAgICAgICAgICAnb3Blbi13aW5kb3cnLFxuICAgIGNsb3NlV2luZG93OiAgICAgICAgICAgICAgICAgICAgICAgICAnY2xvc2Utd2luZG93JyxcbiAgICBnZXRDdXJyZW50V2luZG93OiAgICAgICAgICAgICAgICAgICAgJ2dldC1jdXJyZW50LXdpbmRvdycsXG4gICAgZ2V0Q3VycmVudFdpbmRvd3M6ICAgICAgICAgICAgICAgICAgICdnZXQtY3VycmVudC13aW5kb3dzJyxcbiAgICBzd2l0Y2hUb1dpbmRvdzogICAgICAgICAgICAgICAgICAgICAgJ3N3aXRjaC10by13aW5kb3cnLFxuICAgIHN3aXRjaFRvV2luZG93QnlQcmVkaWNhdGU6ICAgICAgICAgICAnc3dpdGNoLXRvLXdpbmRvdy1ieS1wcmVkaWNhdGUnLFxuICAgIHN3aXRjaFRvUGFyZW50V2luZG93OiAgICAgICAgICAgICAgICAnc3dpdGNoLXRvLXBhcmVudC13aW5kb3cnLFxuICAgIHN3aXRjaFRvUHJldmlvdXNXaW5kb3c6ICAgICAgICAgICAgICAnc3dpdGNoLXRvLXByZXZpb3VzLXdpbmRvdycsXG4gICAgc2V0TmF0aXZlRGlhbG9nSGFuZGxlcjogICAgICAgICAgICAgICdzZXQtbmF0aXZlLWRpYWxvZy1oYW5kbGVyJyxcbiAgICBnZXROYXRpdmVEaWFsb2dIaXN0b3J5OiAgICAgICAgICAgICAgJ2dldC1uYXRpdmUtZGlhbG9nLWhpc3RvcnknLFxuICAgIGdldEJyb3dzZXJDb25zb2xlTWVzc2FnZXM6ICAgICAgICAgICAnZ2V0LWJyb3dzZXItY29uc29sZS1tZXNzYWdlcycsXG4gICAgZ2V0QWN0aXZlRWxlbWVudDogICAgICAgICAgICAgICAgICAgICdnZXQtYWN0aXZlLWVsZW1lbnQnLFxuICAgIHNldFRlc3RTcGVlZDogICAgICAgICAgICAgICAgICAgICAgICAnc2V0LXRlc3Qtc3BlZWQnLFxuICAgIHNldFBhZ2VMb2FkVGltZW91dDogICAgICAgICAgICAgICAgICAnc2V0LXBhZ2UtbG9hZC10aW1lb3V0JyxcbiAgICBkZWJ1ZzogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RlYnVnJyxcbiAgICBkaXNhYmxlRGVidWc6ICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc2FibGUtZGVidWcnLFxuICAgIGFzc2VydGlvbjogICAgICAgICAgICAgICAgICAgICAgICAgICAnYXNzZXJ0aW9uJyxcbiAgICB1c2VSb2xlOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3VzZVJvbGUnLFxuICAgIHRlc3REb25lOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGVzdC1kb25lJyxcbiAgICBiYWNrdXBTdG9yYWdlczogICAgICAgICAgICAgICAgICAgICAgJ2JhY2t1cC1zdG9yYWdlcycsXG4gICAgZXhlY3V0ZUV4cHJlc3Npb246ICAgICAgICAgICAgICAgICAgICdleGVjdXRlLWV4cHJlc3Npb24nLFxuICAgIGV4ZWN1dGVBc3luY0V4cHJlc3Npb246ICAgICAgICAgICAgICAnZXhlY3V0ZS1hc3luYy1leHByZXNzaW9uJyxcbiAgICB1bmxvY2tQYWdlOiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3VubG9jay1wYWdlJyxcbiAgICBjbG9zZUNoaWxkV2luZG93T25GaWxlRG93bmxvYWRpbmc6ICAgJ2Nsb3NlLWNoaWxkLXdpbmRvdy1vbi1maWxlLWRvd25sb2FkaW5nJyxcbiAgICByZWNvcmRlcjogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3JlY29yZGVyJyxcbiAgICBwcmVwYXJlQ2xpZW50RW52aXJvbm1lbnRJbkRlYnVnTW9kZTogJ3ByZXBhcmUtY2xpZW50LWVudmlyb25tZW50LWluLWRlYnVnLW1vZGUnLFxufTtcbiJdfQ==